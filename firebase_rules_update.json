{
  "rules": {
    ".read": false,
    ".write": false,

    "admins": {
      ".read": "auth != null",
      ".write": "auth != null && root.child('admins').child(auth.uid).exists()"
    },

    "properties": {
      ".read": "auth != null",
      ".write": "auth != null && root.child('admins').child(auth.uid).exists()"
    },

    "users": {
      "$uid": {
        ".read": "auth != null && auth.uid == $uid",
        ".write": "auth != null && auth.uid == $uid"
      }
    },

    "threads": {
      ".read": "auth != null",
      ".write": "auth != null && root.child('admins').child(auth.uid).exists()",
      ".indexOn": ["isGroup", "lastMessageAt"]
    },

    "groups": {
      ".read": "auth != null",
      ".write": "auth != null && root.child('admins').child(auth.uid).exists()",
      ".indexOn": ["createdAt", "lastMessageAt"]
    },

    "messages": {
      "$seller_uid": {
        "$propertyId": {
          ".read": "auth != null && auth.uid == $seller_uid",
          ".write": "auth != null && root.child('admins').child(auth.uid).exists()"
        }
      }
    },

    "complaints": {
      ".read": true,
      ".indexOn": ["timestamp"],
      "$uid": {
        "$complaintId": {
          ".write": "auth != null && (auth.uid === $uid || root.child('admins').child(auth.uid).exists())",
          ".validate": "newData.hasChildren(['title','category','description','priority','timestamp','status','userId'])"
        }
      }
    },

    "lost_found": {
      ".read": true,
      ".indexOn": ["timestamp"],
      "$uid": {
        "$itemId": {
          ".write": "auth != null && (auth.uid === $uid || root.child('admins').child(auth.uid).exists())",
          ".validate": "newData.hasChildren(['title','description','location','type','category','timestamp','userId'])"
        }
      }
    },

    "feedback": {
      ".read": true,
      ".indexOn": ["timestamp"],
      "$uid": {
        "$feedbackId": {
          ".write": "auth != null && (auth.uid === $uid || root.child('admins').child(auth.uid).exists())",
          ".validate": "newData.hasChildren(['overallRating','timestamp','userId']) && newData.child('overallRating').isNumber() && newData.child('userId').val() === $uid"
        }
      }
    },

    "lost": {
      ".read": "auth != null",
      "$item_id": {
        ".read": "auth != null",
        ".write": "auth != null && (newData.child('uid').val() == auth.uid || root.child('admins').child(auth.uid).exists())",
        ".indexOn": ["timestamp"]
      }
    },

    "found": {
      ".read": "auth != null",
      "$item_id": {
        ".read": "auth != null",
        ".write": "auth != null && (newData.child('uid').val() == auth.uid || root.child('admins').child(auth.uid).exists())",
        ".indexOn": ["timestamp"]
      }
    },

    "alerts": {
      ".read": "auth != null",
      "$alert_id": {
        ".read": "auth != null",
        ".write": "auth != null && root.child('admins').child(auth.uid).exists()",
        ".indexOn": ["timestamp"]
      }
    },

    "incidents": {
      ".read": "auth != null",
      "$incident_id": {
        ".read": "auth != null",
        ".write": "auth != null && ((!data.exists() && newData.child('uid').val() == auth.uid) || root.child('admins').child(auth.uid).exists())",
        ".indexOn": ["timestamp"]
      }
    },

    "market_items": {
      ".read": true,
      ".indexOn": ["createdAt", "category", "price"],
      "$itemId": {
        ".write": "auth != null && (newData.child('sellerId').val() == auth.uid || root.child('admins').child(auth.uid).exists())",
        ".validate": "newData.hasChildren(['type','category','title','price','location','imageUrls','sellerId','sellerName','createdAt','status'])"
      }
    }
  }
}
